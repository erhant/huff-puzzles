
/** 
 *  FOO_BAR HUFF EXERCISE
 *
 *  Majority of ethereum contracts hold logic divide this logic into functions which users can 
 *  specify and call to execute a particular logic without clashing into the other
 *  
 *  The task is to write within the `MAIN` macro below, huff code that mimics 2 solidity functions. 
 *      - One named `foo()` that simply returns 2,
 *      - the second named `bar()` that simply returns 3.
 *
 *  NOTICE: The contract should revert when an unrecognized function is called
 */

#define function foo() payable returns(uint256)
#define function bar() payable returns(uint256)

#define macro MAIN() = {
    // function selectors
    0x00 calldataload 0xE0 shr
    dup1 __FUNC_SIG(foo) eq foo_func jumpi
         __FUNC_SIG(bar) eq bar_func jumpi

    // unrecognized function
    0x00 0x00 revert

    foo_func:
        0x02
        ret jump

    bar_func:
    0x03

    ret:
    0x00 mstore
    0x20 0x00 return
}